apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  namespace: data-platform
  labels:
    app: schema-registry
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: schema-registry
  template:
    metadata:
      labels:
        app: schema-registry
        version: v1.0.0
    spec:
      serviceAccountName: schema-registry-sa
      containers:
        - name: schema-registry
          image: schema-registry:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
            - containerPort: 9090
              name: metrics
          env:
            - name: ETCD_HOST
              value: "etcd-cluster"
            - name: ETCD_PORT
              value: "2379"
            - name: API_HOST
              value: "0.0.0.0"
            - name: API_PORT
              value: "8000"
            - name: DEBUG
              value: "false"
            - name: LOG_LEVEL
              value: "INFO"
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry
  namespace: data-platform
  labels:
    app: schema-registry
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: http
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: metrics
  selector:
    app: schema-registry
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: schema-registry-ingress
  namespace: data-platform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - schema-registry.data-platform.com
      secretName: schema-registry-tls
  rules:
    - host: schema-registry.data-platform.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: schema-registry
                port:
                  number: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: schema-registry-sa
  namespace: data-platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: schema-registry-role
  namespace: data-platform
rules:
  - apiGroups: [""]
    resources: ["pods", "services"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: schema-registry-rolebinding
  namespace: data-platform
subjects:
  - kind: ServiceAccount
    name: schema-registry-sa
    namespace: data-platform
roleRef:
  kind: Role
  name: schema-registry-role
  apiGroup: rbac.authorization.k8s.io
